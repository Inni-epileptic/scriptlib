-- Gui to Lua
-- Version: 3.2

-- Instances:

local Executor = Instance.new("ScreenGui")
local index = Instance.new("Frame")
local Execute = Instance.new("TextButton")
local TextLabel = Instance.new("TextLabel")
local TextLabel_2 = Instance.new("TextLabel")
local Scripts = Instance.new("TextButton")
local TextEditor = Instance.new("ScrollingFrame")
local Source = Instance.new("TextBox")
local Tokens_ = Instance.new("TextLabel")
local Strings_ = Instance.new("TextLabel")
local RemoteHighlight_ = Instance.new("TextLabel")
local Keywords_ = Instance.new("TextLabel")
local Numbers_ = Instance.new("TextLabel")
local Globals_ = Instance.new("TextLabel")
local Comments_ = Instance.new("TextLabel")
local Lines = Instance.new("TextLabel")
local Hub = Instance.new("Frame")
local InfiniteYield = Instance.new("TextButton")
local DarkDex = Instance.new("TextButton")
local SimplySpy = Instance.new("TextButton")
local Scriptdumper = Instance.new("TextButton")

--Properties:

Executor.Name = "Executor"
Executor.Parent = game:GetService("CoreGui")
Executor.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
Executor.ResetOnSpawn = false

index.Name = "index"
index.Parent = Executor
index.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
index.Position = UDim2.new(0.29351303, 0, 0.313851774, 0)
index.Size = UDim2.new(0, 791, 0, 400)

Execute.Name = "Execute"
Execute.Parent = index
Execute.AnchorPoint = Vector2.new(0.5, 0.5)
Execute.BackgroundColor3 = Color3.fromRGB(62, 62, 62)
Execute.BorderSizePixel = 0
Execute.Position = UDim2.new(0.0797075182, 0, 0.0841311663, 0)
Execute.Size = UDim2.new(0, 96, 0, 25)
Execute.Font = Enum.Font.SourceSansLight
Execute.Text = "Execute"
Execute.TextColor3 = Color3.fromRGB(255, 255, 255)
Execute.TextScaled = true
Execute.TextSize = 14.000
Execute.TextWrapped = true

TextLabel.Parent = index
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BackgroundTransparency = 1.000
TextLabel.Position = UDim2.new(0.396965861, 0, 0.0400000028, 0)
TextLabel.Size = UDim2.new(0, 200, 0, 30)
TextLabel.Font = Enum.Font.Code
TextLabel.Text = "Quantum Internal"
TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.TextScaled = true
TextLabel.TextSize = 14.000
TextLabel.TextWrapped = true

TextLabel_2.Parent = index
TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.BackgroundTransparency = 1.000
TextLabel_2.Position = UDim2.new(0.00884955749, 0, 0.922499895, 0)
TextLabel_2.Size = UDim2.new(0, 193, 0, 30)
TextLabel_2.Font = Enum.Font.Code
TextLabel_2.Text = "Status: Injected"
TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.TextSize = 15.000
TextLabel_2.TextWrapped = true
TextLabel_2.TextXAlignment = Enum.TextXAlignment.Left

Scripts.Name = "Scripts"
Scripts.Parent = index
Scripts.AnchorPoint = Vector2.new(0.5, 0.5)
Scripts.BackgroundColor3 = Color3.fromRGB(62, 62, 62)
Scripts.BorderSizePixel = 0
Scripts.Position = UDim2.new(0.930529296, 0, 0.0816311687, 0)
Scripts.Size = UDim2.new(0, 96, 0, 25)
Scripts.Font = Enum.Font.SourceSansLight
Scripts.Text = "Scripts"
Scripts.TextColor3 = Color3.fromRGB(255, 255, 255)
Scripts.TextScaled = true
Scripts.TextSize = 14.000
Scripts.TextWrapped = true

TextEditor.Name = "TextEditor"
TextEditor.Parent = index
TextEditor.Active = true
TextEditor.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextEditor.BackgroundTransparency = 1.000
TextEditor.Position = UDim2.new(0, 14, 0, 57)
TextEditor.Size = UDim2.new(0, 761, 0, 311)
TextEditor.HorizontalScrollBarInset = Enum.ScrollBarInset.Always

Source.Name = "Source"
Source.Parent = TextEditor
Source.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Source.BackgroundTransparency = 0.970
Source.Position = UDim2.new(0, 30, 0, 0)
Source.Size = UDim2.new(0.939024389, 0, 1, 0)
Source.ZIndex = 3
Source.ClearTextOnFocus = false
Source.Font = Enum.Font.Code
Source.MultiLine = true
Source.PlaceholderColor3 = Color3.fromRGB(204, 204, 204)
Source.Text = ""
Source.TextColor3 = Color3.fromRGB(255, 255, 255)
Source.TextSize = 15.000
Source.TextXAlignment = Enum.TextXAlignment.Left
Source.TextYAlignment = Enum.TextYAlignment.Top

Tokens_.Name = "Tokens_"
Tokens_.Parent = Source
Tokens_.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Tokens_.BackgroundTransparency = 1.000
Tokens_.Size = UDim2.new(1, 0, 1, 0)
Tokens_.ZIndex = 5
Tokens_.Font = Enum.Font.Code
Tokens_.Text = ""
Tokens_.TextColor3 = Color3.fromRGB(255, 255, 255)
Tokens_.TextSize = 15.000
Tokens_.TextXAlignment = Enum.TextXAlignment.Left
Tokens_.TextYAlignment = Enum.TextYAlignment.Top

Strings_.Name = "Strings_"
Strings_.Parent = Source
Strings_.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Strings_.BackgroundTransparency = 1.000
Strings_.Size = UDim2.new(1, 0, 1, 0)
Strings_.ZIndex = 5
Strings_.Font = Enum.Font.Code
Strings_.Text = ""
Strings_.TextColor3 = Color3.fromRGB(173, 241, 149)
Strings_.TextSize = 15.000
Strings_.TextXAlignment = Enum.TextXAlignment.Left
Strings_.TextYAlignment = Enum.TextYAlignment.Top

RemoteHighlight_.Name = "RemoteHighlight_"
RemoteHighlight_.Parent = Source
RemoteHighlight_.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
RemoteHighlight_.BackgroundTransparency = 1.000
RemoteHighlight_.Size = UDim2.new(1, 0, 1, 0)
RemoteHighlight_.ZIndex = 5
RemoteHighlight_.Font = Enum.Font.Code
RemoteHighlight_.Text = ""
RemoteHighlight_.TextColor3 = Color3.fromRGB(0, 144, 255)
RemoteHighlight_.TextSize = 15.000
RemoteHighlight_.TextXAlignment = Enum.TextXAlignment.Left
RemoteHighlight_.TextYAlignment = Enum.TextYAlignment.Top

Keywords_.Name = "Keywords_"
Keywords_.Parent = Source
Keywords_.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Keywords_.BackgroundTransparency = 1.000
Keywords_.Size = UDim2.new(1, 0, 1, 0)
Keywords_.ZIndex = 5
Keywords_.Font = Enum.Font.Code
Keywords_.Text = ""
Keywords_.TextColor3 = Color3.fromRGB(248, 109, 124)
Keywords_.TextSize = 15.000
Keywords_.TextXAlignment = Enum.TextXAlignment.Left
Keywords_.TextYAlignment = Enum.TextYAlignment.Top

Numbers_.Name = "Numbers_"
Numbers_.Parent = Source
Numbers_.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Numbers_.BackgroundTransparency = 1.000
Numbers_.Size = UDim2.new(1, 0, 1, 0)
Numbers_.ZIndex = 4
Numbers_.Font = Enum.Font.Code
Numbers_.Text = ""
Numbers_.TextColor3 = Color3.fromRGB(255, 198, 0)
Numbers_.TextSize = 15.000
Numbers_.TextXAlignment = Enum.TextXAlignment.Left
Numbers_.TextYAlignment = Enum.TextYAlignment.Top

Globals_.Name = "Globals_"
Globals_.Parent = Source
Globals_.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Globals_.BackgroundTransparency = 1.000
Globals_.Size = UDim2.new(1, 0, 1, 0)
Globals_.ZIndex = 5
Globals_.Font = Enum.Font.Code
Globals_.Text = ""
Globals_.TextColor3 = Color3.fromRGB(132, 214, 247)
Globals_.TextSize = 15.000
Globals_.TextXAlignment = Enum.TextXAlignment.Left
Globals_.TextYAlignment = Enum.TextYAlignment.Top

Comments_.Name = "Comments_"
Comments_.Parent = Source
Comments_.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Comments_.BackgroundTransparency = 1.000
Comments_.Size = UDim2.new(1, 0, 1, 0)
Comments_.ZIndex = 5
Comments_.Font = Enum.Font.Code
Comments_.Text = ""
Comments_.TextColor3 = Color3.fromRGB(59, 200, 59)
Comments_.TextSize = 15.000
Comments_.TextXAlignment = Enum.TextXAlignment.Left
Comments_.TextYAlignment = Enum.TextYAlignment.Top

Lines.Name = "Lines"
Lines.Parent = TextEditor
Lines.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Lines.BackgroundTransparency = 0.950
Lines.BorderSizePixel = 0
Lines.Size = UDim2.new(0, 30, 1, 0)
Lines.ZIndex = 4
Lines.Font = Enum.Font.Code
Lines.Text = "1"
Lines.TextColor3 = Color3.fromRGB(255, 255, 255)
Lines.TextSize = 15.000
Lines.TextYAlignment = Enum.TextYAlignment.Top

Hub.Name = "Hub"
Hub.Parent = Executor
Hub.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
Hub.Position = UDim2.new(0.761100709, 0, 0.261025071, 0)
Hub.Size = UDim2.new(0, 169, 0, 399)
Hub.Visible = false

InfiniteYield.Name = "InfiniteYield"
InfiniteYield.Parent = Hub
InfiniteYield.AnchorPoint = Vector2.new(0.5, 0.5)
InfiniteYield.BackgroundColor3 = Color3.fromRGB(62, 62, 62)
InfiniteYield.BorderSizePixel = 0
InfiniteYield.Position = UDim2.new(0.499001652, 0, 0.0690935552, 0)
InfiniteYield.Size = UDim2.new(0, 167, 0, 25)
InfiniteYield.Font = Enum.Font.SourceSansLight
InfiniteYield.Text = "Infinite yield"
InfiniteYield.TextColor3 = Color3.fromRGB(255, 255, 255)
InfiniteYield.TextScaled = true
InfiniteYield.TextSize = 14.000
InfiniteYield.TextWrapped = true

DarkDex.Name = "DarkDex"
DarkDex.Parent = Hub
DarkDex.AnchorPoint = Vector2.new(0.5, 0.5)
DarkDex.BackgroundColor3 = Color3.fromRGB(62, 62, 62)
DarkDex.BorderSizePixel = 0
DarkDex.Position = UDim2.new(0.500988901, 0, 0.146787792, 0)
DarkDex.Size = UDim2.new(0, 167, 0, 25)
DarkDex.Font = Enum.Font.SourceSansLight
DarkDex.Text = "Dark Dex"
DarkDex.TextColor3 = Color3.fromRGB(255, 255, 255)
DarkDex.TextScaled = true
DarkDex.TextSize = 14.000
DarkDex.TextWrapped = true

SimplySpy.Name = "SimplySpy"
SimplySpy.Parent = Hub
SimplySpy.AnchorPoint = Vector2.new(0.5, 0.5)
SimplySpy.BackgroundColor3 = Color3.fromRGB(62, 62, 62)
SimplySpy.BorderSizePixel = 0
SimplySpy.Position = UDim2.new(0.500988901, 0, 0.226988286, 0)
SimplySpy.Size = UDim2.new(0, 167, 0, 25)
SimplySpy.Font = Enum.Font.SourceSansLight
SimplySpy.Text = "Simply Spy"
SimplySpy.TextColor3 = Color3.fromRGB(255, 255, 255)
SimplySpy.TextScaled = true
SimplySpy.TextSize = 14.000
SimplySpy.TextWrapped = true

Scriptdumper.Name = "Script dumper"
Scriptdumper.Parent = Hub
Scriptdumper.AnchorPoint = Vector2.new(0.5, 0.5)
Scriptdumper.BackgroundColor3 = Color3.fromRGB(62, 62, 62)
Scriptdumper.BorderSizePixel = 0
Scriptdumper.Position = UDim2.new(0.500988901, 0, 0.307188779, 0)
Scriptdumper.Size = UDim2.new(0, 167, 0, 25)
Scriptdumper.Font = Enum.Font.SourceSansLight
Scriptdumper.Text = "Script Dumper"
Scriptdumper.TextColor3 = Color3.fromRGB(255, 255, 255)
Scriptdumper.TextScaled = true
Scriptdumper.TextSize = 14.000
Scriptdumper.TextWrapped = true

-- Scripts:

local function LSUWVK_fake_script() -- Execute.LocalScript 
	local script = Instance.new('LocalScript', Execute)

	local button = script.Parent
	local text = script.Parent.Parent.TextEditor.Source
	
	button.MouseButton1Click:Connect(function()
		loadstring(text.Text)()
	end)
end
coroutine.wrap(LSUWVK_fake_script)()
local function DZOMXA_fake_script() -- index.LocalScript 
	local script = Instance.new('LocalScript', index)

	local lua_keywords = {"and", "break", "do", "else", "elseif", "end", "false", "for", "function", "goto", "if", "in", "local", "nil", "not", "or", "repeat", "return", "then", "true", "until", "while"}
	local global_env = {"getrawmetatable", "game", "workspace", "script", "math", "string", "table", "print", "wait", "BrickColor", "Color3", "next", "pairs", "ipairs", "select", "unpack", "Instance", "Vector2", "Vector3", "CFrame", "Ray", "UDim2", "Enum", "assert", "error", "warn", "tick", "loadstring", "_G", "shared", "getfenv", "setfenv", "newproxy", "setmetatable", "getmetatable", "os", "debug", "pcall", "ypcall", "xpcall", "rawequal", "rawset", "rawget", "tonumber", "tostring", "type", "typeof", "_VERSION", "coroutine", "delay", "require", "spawn", "LoadLibrary", "settings", "stats", "time", "UserSettings", "version", "Axes", "ColorSequence", "Faces", "ColorSequenceKeypoint", "NumberRange", "NumberSequence", "NumberSequenceKeypoint", "gcinfo", "elapsedTime", "collectgarbage", "PhysicalProperties", "Rect", "Region3", "Region3int16", "UDim", "Vector2int16", "Vector3int16"}
	
	local Source = script.Parent.TextEditor.Source
	local Lines = Source.Parent.Lines
	
	local Highlight = function(string, keywords)
	    local K = {}
	    local S = string
	    local Token =
	    {
	        ["="] = true,
	        ["."] = true,
	        [","] = true,
	        ["("] = true,
	        [")"] = true,
	        ["["] = true,
	        ["]"] = true,
	        ["{"] = true,
	        ["}"] = true,
	        [":"] = true,
	        ["*"] = true,
	        ["/"] = true,
	        ["+"] = true,
	        ["-"] = true,
	        ["%"] = true,
			[";"] = true,
			["~"] = true
	    }
	    for i, v in pairs(keywords) do
	        K[v] = true
	    end
	    S = S:gsub(".", function(c)
	        if Token[c] ~= nil then
	            return "\32"
	        else
	            return c
	        end
	    end)
	    S = S:gsub("%S+", function(c)
	        if K[c] ~= nil then
	            return c
	        else
	            return (" "):rep(#c)
	        end
	    end)
	  
	    return S
	end
	
	local hTokens = function(string)
	    local Token =
	    {
	        ["="] = true,
	        ["."] = true,
	        [","] = true,
	        ["("] = true,
	        [")"] = true,
	        ["["] = true,
	        ["]"] = true,
	        ["{"] = true,
	        ["}"] = true,
	        [":"] = true,
	        ["*"] = true,
	        ["/"] = true,
	        ["+"] = true,
	        ["-"] = true,
	        ["%"] = true,
			[";"] = true,
			["~"] = true
	    }
	    local A = ""
	    string:gsub(".", function(c)
	        if Token[c] ~= nil then
	            A = A .. c
	        elseif c == "\n" then
	            A = A .. "\n"
			elseif c == "\t" then
				A = A .. "\t"
	        else
	            A = A .. "\32"
	        end
	    end)
	  
	    return A
	end
	
	
	local strings = function(string)
	    local highlight = ""
	    local quote = false
	    string:gsub(".", function(c)
	        if quote == false and c == "\"" then
	            quote = true
	        elseif quote == true and c == "\"" then
	            quote = false
	        end
	        if quote == false and c == "\"" then
	            highlight = highlight .. "\""
	        elseif c == "\n" then
	            highlight = highlight .. "\n"
			elseif c == "\t" then
			    highlight = highlight .. "\t"
	        elseif quote == true then
	            highlight = highlight .. c
	        elseif quote == false then
	            highlight = highlight .. "\32"
	        end
	    end)
	  
	    return highlight
	end
	
	local comments = function(string)
	    local ret = ""
	    string:gsub("[^\r\n]+", function(c)
	        local comm = false
	        local i = 0
	        c:gsub(".", function(n)
	            i = i + 1
	            if c:sub(i, i + 1) == "--" then
	                comm = true
	            end
	            if comm == true then
	                ret = ret .. n
	            else
	                ret = ret .. "\32"
	            end
	        end)
	        ret = ret
	    end)
	    
	    return ret
	end
	
	local numbers = function(string)
	    local A = ""
	    string:gsub(".", function(c)
	        if tonumber(c) ~= nil then
	            A = A .. c
	        elseif c == "\n" then
	            A = A .. "\n"
			elseif c == "\t" then
				A = A .. "\t"
	        else
	            A = A .. "\32"
	        end
	    end)
	  
	    return A
	end
	
	local highlight_source = function(type)
		if type == "Text" then
			Source.Text = Source.Text:gsub("\13", "")
			Source.Text = Source.Text:gsub("\t", "      ")
			local s = Source.Text
			Source.Keywords_.Text = Highlight(s, lua_keywords)
			Source.Globals_.Text = Highlight(s, global_env)
			Source.RemoteHighlight_.Text = Highlight(s, {"FireServer", "fireServer", "InvokeServer", "invokeServer"})
			Source.Tokens_.Text = hTokens(s)
			Source.Numbers_.Text = numbers(s)
			Source.Strings_.Text = strings(s)
			local lin = 1
			s:gsub("\n", function()
				lin = lin + 1
			end)
			Lines.Text = ""
			for i = 1, lin do
				Lines.Text = Lines.Text .. i .. "\n"
			end
		end
	end
	
	highlight_source("Text")
	
	Source.Changed:Connect(highlight_source)
	
	
end
coroutine.wrap(DZOMXA_fake_script)()
local function UBNJG_fake_script() -- index.DragUI 
	local script = Instance.new('LocalScript', index)

	local UIS2 = game:GetService("UserInputService")
	function dragify(Frame)
	    dragToggle = nil
	    local dragSpeed = 0
	    dragInput = nil
	    dragStart = nil
	    local dragPos = nil
	    function updateInput(input2)
			local Delta = input2.Position - dragStart
	        local Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + Delta.X, startPos.Y.Scale, startPos.Y.Offset + Delta.Y)
	        game:GetService("TweenService"):Create(Frame, TweenInfo.new(0.25), {Position = Position}):Play()
	    end
		Frame.InputBegan:Connect(function(input2)
			if (input2.UserInputType == Enum.UserInputType.MouseButton1 or input2.UserInputType == Enum.UserInputType.Touch) and UIS2:GetFocusedTextBox() == nil then
	            dragToggle = true
				dragStart = input2.Position
	            startPos = Frame.Position
				input2.Changed:Connect(function()
					if input2.UserInputState == Enum.UserInputState.End then
	                    dragToggle = false
	                end
	            end)
	        end
	    end)
		Frame.InputChanged:Connect(function(input2)
			if input2.UserInputType == Enum.UserInputType.MouseMovement or input2.UserInputType == Enum.UserInputType.Touch then
				dragInput = input2
	        end
	    end)
		game:GetService("UserInputService").InputChanged:Connect(function(input2)
			if input2 == dragInput and dragToggle then
				updateInput(input2)
	        end
	    end)
	end
	
	dragify(script.Parent)
end
coroutine.wrap(UBNJG_fake_script)()
local function PEOU_fake_script() -- Scripts.LocalScript 
	local script = Instance.new('LocalScript', Scripts)

	local toggle = true 
	script.Parent.MouseButton1Click:Connect(function()
		if toggle == true then
			script.Parent.Parent.Parent.Hub.Visible = true
			toggle = false
		else
			script.Parent.Parent.Parent.Hub.Visible = false
			toggle = true
		end
	end)
end
coroutine.wrap(PEOU_fake_script)()
local function DFCPD_fake_script() -- Executor.InputKey 
	local script = Instance.new('LocalScript', Executor)

	local UI = game:GetService("UserInputService")
	local index = script.Parent.index
	local hub = script.Parent.Hub
	local blur = Instance.new("BlurEffect", workspace.CurrentCamera)
	blur.Size = 0
	local tween = game:GetService("TweenService")
	UI.InputBegan:Connect(function(keyCode)
		if keyCode.keyCode == Enum.KeyCode.LeftShift then
			tween:Create(blur, TweenInfo.new(1), {Size=25}):Play()
			index.Visible = true
		end
		
	end)
	UI.InputEnded:Connect(function(keyCode, gameProcessedEvent)
		if gameProcessedEvent then return end
		if keyCode.KeyCode == Enum.KeyCode.LeftShift then
			tween:Create(blur, TweenInfo.new(1), {Size=0}):Play()
			index.Visible = false
			hub.Visible = false
		end
	end)
end
coroutine.wrap(DFCPD_fake_script)()
local function AWJSUY_fake_script() -- InfiniteYield.LocalScript 
	local script = Instance.new('LocalScript', InfiniteYield)

	local button = script.Parent
	
	button.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
	end)
end
coroutine.wrap(AWJSUY_fake_script)()
local function BUAM_fake_script() -- DarkDex.LocalScript 
	local script = Instance.new('LocalScript', DarkDex)

	local button = script.Parent
	
	button.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet('https://raw.githubusercontent.com/Inni-epileptic/scriptlib/main/Dark%20Dex'))()
	end)
end
coroutine.wrap(BUAM_fake_script)()
local function VPIHOHC_fake_script() -- SimplySpy.LocalScript 
	local script = Instance.new('LocalScript', SimplySpy)

	local button = script.Parent
	
	button.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/exxtremestuffs/SimpleSpySource/master/SimpleSpy.lua"))()
	end)
end
coroutine.wrap(VPIHOHC_fake_script)()
local function UWLITR_fake_script() -- Scriptdumper.LocalScript 
	local script = Instance.new('LocalScript', Scriptdumper)

	local button = script.Parent
	
	button.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet('https://pastebin.com/raw/BG044c93'))()
	end)
end
coroutine.wrap(UWLITR_fake_script)()
local function IDUCU_fake_script() -- Hub.DragUI 
	local script = Instance.new('LocalScript', Hub)

	local UIS = game:GetService("UserInputService")
	function dragify(Frame)
	    dragToggle2 = nil
	    local dragSpeed2 = 0
		dragInput2 = nil
	    dragStart2 = nil
	    local dragPos2 = nil
	    function updateInput2(input2)
			local Delta2 = input2.Position - dragStart2
			local Position2 = UDim2.new(startPos.X.Scale, startPos.X.Offset + Delta2.X, startPos.Y.Scale, startPos.Y.Offset + Delta2.Y)
			game:GetService("TweenService"):Create(Frame, TweenInfo.new(0.25), {Position = Position2}):Play()
	    end
		Frame.InputBegan:Connect(function(input2)
			if (input2.UserInputType == Enum.UserInputType.MouseButton1 or input2.UserInputType == Enum.UserInputType.Touch) and UIS:GetFocusedTextBox() == nil then
				dragToggle2 = true
				dragStart2 = input2.Position
	            startPos = Frame.Position
				input2.Changed:Connect(function()
					if input2.UserInputState == Enum.UserInputState.End then
						dragToggle2 = false
	                end
	            end)
	        end
	    end)
		Frame.InputChanged:Connect(function(input2)
			if input2.UserInputType == Enum.UserInputType.MouseMovement or input2.UserInputType == Enum.UserInputType.Touch then
				dragInput2 = input2
	        end
	    end)
		game:GetService("UserInputService").InputChanged:Connect(function(input2)
			if input2 == dragInput2 and dragToggle2 then
				updateInput2(input2)
	        end
	    end)
	end
	
	dragify(script.Parent)
end
coroutine.wrap(IDUCU_fake_script)()
local function XQPVYS_fake_script() -- Executor.protectthisgui 
	local script = Instance.new('LocalScript', Executor)

	function RandomString(Length)
		local Length = typeof(Length) == "number" and math.clamp(Length,1,100) or math.random(80,100)
		local Text = ""
		for i = 1,Length do
			Text = Text..string.char(math.random(14,126))
		end
		return Text
	end
	while wait() do
		script.Parent.Name = RandomString(15)
	end
end
coroutine.wrap(XQPVYS_fake_script)()
